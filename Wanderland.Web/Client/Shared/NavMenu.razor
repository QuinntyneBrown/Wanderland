@inject IWanderlandHttpApiClient _apiClient
@inject WanderlandHubClient _hubClient

<MudNavMenu>
    <MudNavLink Href="/about" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Info">About Wanderland</MudNavLink>
    <MudNavGroup Icon="@Icons.Material.Filled.Home" Title="Worlds">
        @foreach (var world in _worlds)
        {
            <MudNavLink Href="@($"/{world}")" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Home">@world</MudNavLink>
        }
        <MudNavLink OnClick="async () => await _apiClient.CreateRandomWorld()" Icon="@Icons.Material.Filled.NewLabel">Create Random World</MudNavLink>
    </MudNavGroup>
</MudNavMenu>

@code
{
    List<string> _worlds = new List<string>();

    private bool shouldRender;
    protected override bool ShouldRender() => shouldRender;

    protected override async Task OnInitializedAsync()
    {
        var getWorlds = async () => _worlds = (await _apiClient.GetWorlds()).Select(x => x.Name).ToList();
        _hubClient.WorldListUpdate += async (s, e) =>
        {
            await getWorlds();
            StateHasChanged();
        };

        await getWorlds();

        shouldRender = true;
    }
}